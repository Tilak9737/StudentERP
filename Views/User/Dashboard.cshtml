@model StudentERP.Controllers.DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";

    // Helper method to extract semester number (e.g., "8" from "D1F1S8")
    string GetSemesterNumber(string semId)
    {
        if (string.IsNullOrEmpty(semId) || !semId.Contains("S"))
            return semId;
        return semId.Split('S').Last();
    }

    // Get current semester index and adjacent semesters
    var semesters = Model.AvailableSemesters.OrderBy(s => s).ToList();
    var currentIndex = semesters.IndexOf(Model.DisplaySem);
    var prevSem = currentIndex > 0 ? semesters[currentIndex - 1] : null;
    var nextSem = currentIndex < semesters.Count - 1 && Model.DisplaySem != Model.CurrentSem ? semesters[currentIndex + 1] : null;
}

<style>
    .dashboard-wrapper {
        position: relative;
        width: 100%;
        box-sizing: border-box;
    }

    .welcome-banner {
        width: 100%;
        background: #374151;
        color: #ffffff;
        padding: 10px 0;
        overflow: hidden;
        border-bottom: 1px solid #d1d5db;
        margin-bottom: 20px;
    }

    .banner-container {
        display: inline-block;
        white-space: nowrap;
        animation: marquee 20s linear infinite;
    }

        .banner-container:hover {
            animation-play-state: paused;
        }

    .banner-text {
        display: inline-block;
        font-size: 1.2em;
        font-weight: 500;
        padding-right: 50px;
    }

    @@keyframes marquee {
        0% {
            transform: translateX(100vw);
        }

        100% {
            transform: translateX(-100%);
        }
    }

    .dashboard-container {
        width: 100%;
        margin: 0;
        padding: 0 15px;
        display: flex;
        flex-wrap: nowrap; /* Prevent wrapping on desktop */
        align-items: flex-start;
        gap: 20px;
        box-sizing: border-box;
    }

    .id-card {
        width: 300px;
        height: 440px;
        background: #ffffff;
        border: 1px solid #d1d5db;
        border-radius: 4px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        padding: 15px;
        display: flex;
        flex-direction: column;
        align-items: center;
        position: relative;
        transition: box-shadow 0.3s ease;
        flex-shrink: 0; /* Prevent ID card from shrinking */
    }

        .id-card:hover {
            box-shadow: 0 6px 18px rgba(0, 0, 0, 0.1);
        }

    .id-card-top {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 40px;
        background: #374151;
        border-radius: 4px 4px 0 0;
        z-index: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #ffffff;
        font-weight: 600;
        font-size: 1.2em;
    }

    .profile-picture {
        width: 140px;
        height: 140px;
        border-radius: 8px;
        object-fit: cover;
        border: 3px solid #6b7280;
        margin-top: 50px;
        margin-bottom: 10px;
    }

    .no-picture {
        width: 140px;
        height: 140px;
        border-radius: 8px;
        background: #e5e7eb;
        border: 3px dashed #9ca3af;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        color: #6b7280;
        font-size: 14px;
        font-weight: 500;
        margin-top: 50px;
        margin-bottom: 10px;
    }

    .id-info {
        text-align: center;
        width: 100%;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
    }

        .id-info .full-name {
            font-size: 1.4em;
            font-weight: 600;
            color: #1f2937;
            margin-bottom: 10px;
            position: relative;
        }

        .id-info p {
            font-size: 1em;
            color: #374151;
            margin: 8px 0;
            position: relative;
        }

        .id-info span.label {
            font-weight: 600;
            color: #4b5563;
            margin-right: 5px;
        }

        .id-info .no-data {
            color: #9ca3af;
            font-style: italic;
        }

        .id-info .full-name::after,
        .id-info p:not(:last-child)::after {
            content: '';
            position: absolute;
            bottom: -4px;
            left: 50%;
            transform: translateX(-50%);
            width: 75%;
            height: 1px;
            background: #d1d5db;
        }

        .id-info .full-name::after {
            width: 75%;
        }

        .id-info p:nth-child(2)::after {
            width: 65%;
        }

        .id-info p:nth-child(3)::after {
            width: 70%;
        }

        .id-info p:nth-child(4)::after {
            width: 65%;
        }

        .id-info p:last-child::after {
            display: none;
        }

    .academic-table-container {
        flex-grow: 1; /* Take all remaining space */
        width: 100%;
        min-width: 0; /* Prevent flex overflow */
    }

    .academic-table {
        width: 100%;
        border-collapse: collapse;
        background: #ffffff;
        border: 1px solid #d1d5db;
        border-radius: 4px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    }

        .academic-table th,
        .academic-table td {
            padding: 10px;
            text-align: left;
            border-bottom: 1px solid #d1d5db;
        }

        .academic-table th {
            background: #374151;
            color: #ffffff;
            font-weight: 600;
        }

        .academic-table tr:nth-child(odd) {
            background: #ffffff;
        }

        .academic-table tr:nth-child(even) {
            background: #f3f4f6;
        }

        .academic-table tr.current-semester {
            background: #e5e7eb;
        }

        .academic-table tr:hover {
            background: #f3f4f6;
        }

        .academic-table tr.current-semester:hover {
            background: #d1d5db;
        }

    .download-btn {
        background: #ef4444;
        color: #ffffff;
        padding: 5px 10px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 0.9em;
        transition: background 0.3s ease;
    }

        .download-btn:hover {
            background: #dc2626;
        }

        .download-btn:disabled {
            background: #9ca3af;
            cursor: not-allowed;
        }

    .pagination-container {
        margin-top: 15px;
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        gap: 10px;
    }

    .pagination-numbers {
        display: flex;
        gap: 8px;
    }

    .pagination-arrows {
        display: flex;
        gap: 8px;
    }

    .pagination-btn {
        background: #374151;
        color: #ffffff;
        padding: 8px 12px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 0.9em;
        font-weight: 500;
        transition: background 0.3s ease;
    }

        .pagination-btn:hover:not(:disabled) {
            background: #4b5563;
        }

        .pagination-btn.active {
            background: #ef4444;
        }

        .pagination-btn:disabled {
            background: #9ca3af;
            cursor: not-allowed;
        }

        .pagination-btn.arrow {
            padding: 8px 12px;
            display: flex;
            align-items: center;
            gap: 6px;
        }

    @@media (max-width: 768px) {
        .dashboard-container {
            padding: 0;
            flex-direction: column; /* Stack vertically on mobile */
            align-items: center;
        }

        .id-card {
            width: 280px;
            height: 450px;
            padding: 10px;
            border-radius: 3px;
        }

        .id-card-top {
            height: 35px;
            border-radius: 3px 3px 0 0;
            font-size: 1em;
        }

        .profile-picture, .no-picture {
            width: 120px;
            height: 120px;
            margin-top: 45px;
            border-radius: 6px;
        }

        .id-info .full-name {
            font-size: 1.2em;
        }

        .id-info p {
            font-size: 0.9em;
        }

        .academic-table-container {
            width: 100%;
            margin-top: 20px;
        }

        .academic-table th,
        .academic-table td {
            font-size: 0.9em;
            padding: 8px;
        }

        .welcome-banner {
            padding: 8px 0;
        }

        .banner-text {
            font-size: 1em;
            padding-right: 30px;
        }

        .banner-container {
            animation: marquee 15s linear infinite;
        }

            .banner-container:hover {
                animation-play-state: paused;
            }

        .pagination-container {
            align-items: center;
        }

        .pagination-btn {
            padding: 6px 10px;
            font-size: 0.85em;
        }

            .pagination-btn.arrow {
                padding: 6px 10px;
            }

        .dashboard-wrapper {
            position: relative;
            width: 100%;
            box-sizing: border-box;
        }
    }
</style>


<div class="dashboard-wrapper">
    <!-- Welcome Banner -->
    <div class="welcome-banner">
        <div class="banner-container">
            <span class="banner-text">Welcome to StudentERP</span>
            <span class="banner-text">Welcome to StudentERP</span>
            <span class="banner-text">Welcome to StudentERP</span>
        </div>
    </div>

    <!-- Dashboard Content -->
    <div class="dashboard-container">
        <!-- ID Card -->
        <div class="id-card">
            <div class="id-card-top">Student ID</div>
            @if (!string.IsNullOrEmpty(Model.ProfilePictureName))
            {
                <img src="~/Images/@Model.ProfilePictureName" alt="Profile Picture" class="profile-picture" onerror="this.src='/Images/placeholder.jpg'" />
            }
            else
            {
                <div class="no-picture">No Profile Picture</div>
            }
            <div class="id-info">
                <div class="full-name">@(Model.FullName ?? "No Data Available")</div>
                <p><span class="label">Phone:</span> @(Model.PhoneNumber ?? "No Data Available")</p>
                <p><span class="label">Father's Name:</span> @(Model.FatherName ?? "No Data Available")</p>
                <p><span class="label">Parent's Phone:</span> @(Model.ParentPhoneNumber ?? "No Data Available")</p>
                <p><span class="label">Email:</span> @(Model.StudentEmail ?? "No Data Available")</p>
            </div>
        </div>

        <!-- Academic Table -->
        <div class="academic-table-container">
            <table class="academic-table">
                <thead>
                    <tr>
                        <th colspan="4">Academic Details (Semester: @GetSemesterNumber(Model.DisplaySem))</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><strong>Degree:</strong></td>
                        <td colspan="3">@(Model.DegreeName ?? "N/A")</td>
                    </tr>
                    <tr>
                        <td><strong>Field:</strong></td>
                        <td colspan="3">@(Model.FieldName ?? "N/A")</td>
                    </tr>
                    <tr>
                        <td><strong>Current Semester:</strong></td>
                        <td colspan="3">@GetSemesterNumber(Model.CurrentSem)</td>
                    </tr>
                    <tr>
                        <th>Subject Name</th>
                        <th>Subject Code</th>
                        <th>Credits</th>
                        <th>Download Syllabus</th>
                    </tr>
                    @if (Model.Subjects.Any())
                    {
                        foreach (var subject in Model.Subjects)
                        {
                            <tr class="@(Model.DisplaySem == Model.CurrentSem ? "current-semester" : "")">
                                <td>@subject.SubjectName</td>
                                <td>@subject.SubjectCode</td>
                                <td>@subject.SubjectCredit</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(subject.SyllabusFileName))
                                    {
                                        <a href="~/syllabus/@subject.SyllabusFileName" download="@subject.SyllabusFileName" class="download-btn">Download</a>
                                    }
                                    else
                                    {
                                        <button class="download-btn" disabled>No File</button>
                                    }
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4" style="text-align: center; color: #9ca3af;">No subjects available for this semester.</td>
                        </tr>
                    }
                </tbody>
            </table>
            <!-- Semester Pagination (Smart Ellipsis Style) -->
            <div class="pagination-container">
                @if (Model.AvailableSemesters.Any())
                {
                    
                        int currentPage = semesters.IndexOf(Model.DisplaySem) + 1;
                        int totalPages = semesters.Count;
                        Func<int, string> semByIndex = i => semesters[i - 1];
                    
                    <div class="pagination-numbers">
                        @for (int i = 1; i <= totalPages; i++)
                        {
                            if (i == 1 || i == totalPages || Math.Abs(i - currentPage) <= 1)
                            {
                                <form asp-action="Dashboard" method="get" style="display:inline;">
                                    <input type="hidden" name="semester" value="@semByIndex(i)" />
                                    <button type="submit" class="pagination-btn @(currentPage == i ? "active" : "")">
                                        @GetSemesterNumber(semByIndex(i))
                                    </button>
                                </form>
                            }
                            else if (i == currentPage - 2 && currentPage - 3 > 1)
                            {
                                <span style="padding:0 5px;">...</span>
                            }
                            else if (i == currentPage + 2 && currentPage + 3 < totalPages)
                            {
                                <span style="padding:0 5px;">...</span>
                            }
                        }
                    </div>
                    <div class="pagination-arrows">
                        <form asp-action="Dashboard" method="get">
                            <input type="hidden" name="semester" value="@prevSem" />
                            <button type="submit" class="pagination-btn arrow" @(prevSem == null ? "disabled" : "")>
                                <span>← Previous</span>
                            </button>
                        </form>
                        <form asp-action="Dashboard" method="get">
                            <input type="hidden" name="semester" value="@nextSem" />
                            <button type="submit" class="pagination-btn arrow" @(nextSem == null ? "disabled" : "")>
                                <span>Next →</span>
                            </button>
                        </form>
                    </div>
                }
                else
                {
                    <span style="color: #9ca3af;">No semesters available</span>
                }
            </div>
        </div>
    </div>
</div>