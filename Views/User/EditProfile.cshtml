@model StudentERP.Controllers.EditProfileViewModel

@{
    ViewData["Title"] = "Edit Profile";
}

<style>
    .wrapper {
        width: 100%;
        background: #f4f4f4;
        display: flex;
        justify-content: center;
        padding: 20px 0;
        min-height: 100vh;
        font-family: 'Arial', sans-serif;
    }

    .card {
        width: 675px;
        height: 400px;
        background: #ffffff;
        border: 1px solid #d1d5db;
        border-radius: 4px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        padding: 15px;
        display: flex;
        flex-direction: column;
        align-items: stretch;
        transition: box-shadow 0.3s ease;
    }

        .card:hover {
            box-shadow: 0 6px 18px rgba(0, 0, 0, 0.1);
        }

    .card-header {
        height: 40px;
        background: #374151;
        border-radius: 4px 4px 0 0;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #ffffff;
        font-weight: 600;
        font-size: 1.2em;
        margin: -15px -15px 15px;
    }

    .profile-picture {
        width: 70px;
        height: 70px;
        border-radius: 8px;
        object-fit: cover;
        border: 3px solid #6b7280;
        background: #ffffff;
        margin: 10px auto;
    }

    .no-picture {
        width: 70px;
        height: 70px;
        border-radius: 8px;
        background: #e5e7eb;
        border: 3px dashed #9ca3af;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        color: #6b7280;
        font-size: 11px;
        font-weight: 500;
        margin: 10px auto;
    }

    .info-section {
        display: flex;
        align-items: center;
        background: #f9fafb;
        border: 1px solid #d1d5db;
        border-radius: 4px;
        padding: 10px;
        margin-bottom: 10px;
    }

        .info-section label {
            font-weight: 600;
            color: #4b5563;
            width: 150px;
            font-size: 0.9em;
        }

        .info-section span {
            color: #1f2937;
            flex: 1;
            font-size: 0.9em;
        }

    .id-section {
        display: flex;
        align-items: center;
        background: #f9fafb;
        border: 1px solid #d1d5db;
        border-radius: 4px;
        padding: 10px;
        margin-bottom: 10px;
    }

        .id-section label {
            font-weight: 600;
            color: #4b5563;
            width: 150px;
            font-size: 0.9em;
        }

        .id-section span {
            font-weight: 600;
            color: #1f2937;
            flex: 1;
            font-size: 0.9em;
        }

    .instruction-section {
        background: #f9fafb;
        border: 1px solid #d1d5db;
        border-radius: 4px;
        padding: 10px;
        padding-left: 160px;
        margin-bottom: 10px;
        font-size: 0.8em;
        color: #6b7280;
    }

    .form-group {
        margin-bottom: 10px;
        flex-grow: 1;
    }

    .control-label {
        font-weight: 600;
        color: #4b5563;
        display: block;
        margin-bottom: 5px;
        font-size: 0.9em;
    }

    .form-control {
        width: 100%;
        max-width: 600px;
        padding: 10px;
        border: 1px solid #d1d5db;
        border-radius: 4px;
        background: #f9fafb;
        font-size: 0.9em;
        color: #374151;
        transition: border-color 0.3s ease, box-shadow 0.3s ease;
    }

        .form-control:focus {
            border-color: #374151;
            box-shadow: 0 0 5px rgba(55, 65, 81, 0.3);
            outline: none;
        }

    .button-group {
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        justify-content: flex-start;
        gap: 10px;
        margin-top: 10px;
    }

    .btn {
        padding: 8px 15px;
        border: none;
        border-radius: 4px;
        font-size: 0.9em;
        font-weight: 500;
        cursor: pointer;
        transition: background 0.3s ease;
        text-align: center;
        min-width: 120px;
    }

    .btn-primary {
        background: #ef4444;
        color: #ffffff;
    }

        .btn-primary:hover {
            background: #dc2626;
        }

    .popup {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        padding: 15px;
        background: #ffffff;
        border: 1px solid #d1d5db;
        border-radius: 4px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        z-index: 1000;
        min-width: 300px;
        text-align: center;
    }

        .popup.success {
            background: #f9fafb;
            border: 1px solid #374151;
            color: #374151;
        }

        .popup.error {
            background: #fef2f2;
            border: 1px solid #ef4444;
            color: #ef4444;
        }

        .popup.confirm {
            background: #ffffff;
            border: 1px solid #374151;
            color: #374151;
        }

    .popup-content {
        margin-bottom: 10px;
        font-size: 1.1em;
        color: #1f2937;
    }

    .popup-close, .popup-confirm, .popup-cancel {
        background: #374151;
        color: #ffffff;
        border: none;
        padding: 8px 15px;
        border-radius: 4px;
        cursor: pointer;
        font-size: 0.9em;
        margin: 0 5px;
        transition: background 0.3s ease;
    }

        .popup-close:hover, .popup-confirm:hover, .popup-cancel:hover {
            background: #4b5563;
        }

    .overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.6);
        z-index: 999;
    }

    @@media (max-width: 768px) {
        .wrapper

    {
        padding: 10px 0;
    }

    .card {
        width: 90%;
        height: auto;
        padding: 10px;
        border-radius: 3px;
    }

    .card-header {
        height: 35px;
        font-size: 1em;
        margin: -10px -10px 10px;
    }

    .profile-picture, .no-picture {
        width: 50px;
        height: 50px;
        font-size: 10px;
        margin: 8px auto;
    }

    .info-section {
        flex-direction: column;
        align-items: flex-start;
        gap: 5px;
        padding: 8px;
        margin-bottom: 8px;
    }

        .info-section label {
            width: auto;
            font-size: 0.85em;
        }

        .info-section span {
            font-size: 0.85em;
        }

    .id-section {
        flex-direction: column;
        align-items: flex-start;
        gap: 5px;
        padding: 8px;
        margin-bottom: 8px;
    }

        .id-section label {
            width: auto;
            font-size: 0.85em;
        }

        .id-section span {
            font-size: 0.85em;
        }

    .instruction-section {
        padding: 8px;
        padding-left: 8px;
        font-size: 0.75em;
        margin-bottom: 8px;
    }

    .form-group {
        margin-bottom: 8px;
    }

    .control-label {
        font-size: 0.85em;
        margin-bottom: 4px;
    }

    .form-control {
        max-width: 100%;
        padding: 8px;
        font-size: 0.85em;
    }

    .button-group {
        flex-direction: column;
        flex-wrap: wrap;
        gap: 8px;
        margin-top: 8px;
    }

    .btn {
        padding: 6px 12px;
        font-size: 0.85em;
        min-width: 100px;
    }

    .popup {
        min-width: 85%;
        padding: 10px;
        border-radius: 3px;
    }

    .popup-content {
        font-size: 1em;
        margin-bottom: 8px;
    }

    .popup-close, .popup-confirm, .popup-cancel {
        padding: 6px 12px;
        font-size: 0.85em;
    }

    }
</style>

<div class="wrapper">
    <div class="card">
        <div class="card-header">Edit Profile</div>
        <div class="info-section">
            <label>Email:</label> <span>@Model.StudentEmail</span>
        </div>
        <div class="id-section">
            <label>Your Student ID:</label>
            <span>@Model.StudentId.ToString().ToUpper()</span>
        </div>
        <div class="id-section">
            <label>Input Guide:</label>
            Please rename your image file to match this ID (e.g., @Model.StudentId.ToString().ToUpper() + ".jpg") before uploading.
        </div>

        <form id="editProfileForm" enctype="multipart/form-data">
            @Html.AntiForgeryToken()
            <div class="form-group">
                <label for="profilePicture" class="control-label">Profile Picture</label>
                <input type="file" id="profilePicture" name="profilePicture" class="form-control" accept="image/*" required />
            </div>
            <div class="button-group">
                <button type="submit" id="uploadButton" class="btn btn-primary">Upload</button>
                <a href="@Url.Action("Dashboard", "User")" class="btn btn-primary">Back to Dashboard</a>
            </div>
        </form>
    </div>
</div>

<div class="overlay" id="popupOverlay"></div>
<div class="popup" id="popup">
    <div class="popup-content" id="popupMessage"></div>
    <button class="popup-close" id="popupClose">Close</button>
    <button class="popup-confirm" id="popupConfirm" style="display: none;">Replace</button>
    <button class="popup-cancel" id="popupCancel" style="display: none;">Cancel</button>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            console.log("jQuery loaded successfully");
            let formData;
            const expectedFileName = "@Model.StudentId.ToString().ToUpper()"+".jpg";

            $("#editProfileForm").submit(function (e) {
                e.preventDefault();
                formData = new FormData(this);
                var fileInput = $("#profilePicture")[0];

                if (!fileInput.files || fileInput.files.length === 0) {
                    showPopup("Please select a file.", "error");
                    return;
                }

                var uploadedFileName = fileInput.files[0].name;
                if (uploadedFileName !== expectedFileName) {
                    showPopup(`Invalid filename. Please rename your file to '${expectedFileName}' and try again.`, "error");
                    return;
                }

                $("#uploadButton").prop("disabled", true).text("Checking...");
                console.log("Checking if profile picture exists");

                $.ajax({
                    url: '@Url.Action("CheckProfilePicture", "User")',
                    type: 'GET',
                    success: function (response) {
                        if (response.exists) {
                            showConfirmPopup("A profile picture (" + response.fileName + ") already exists. Do you want to replace it?");
                        } else {
                            submitForm(false);
                        }
                    },
                    error: function () {
                        showPopup("Error checking profile picture.", "error");
                        $("#uploadButton").prop("disabled", false).text("Upload");
                    }
                });
            });

            $("#popupClose").click(function () { hidePopup(); });
            $("#popupOverlay").click(function () { hidePopup(); });
            $("#popupCancel").click(function () {
                hidePopup();
                $("#uploadButton").prop("disabled", false).text("Upload");
            });
            $("#popupConfirm").click(function () {
                hidePopup();
                submitForm(true);
            });

            function submitForm(replaceConfirmed) {
                console.log("Submitting form to /User/EditProfile, replaceConfirmed=" + replaceConfirmed);
                formData.append("replaceConfirmed", replaceConfirmed);

                $.ajax({
                    url: '@Url.Action("EditProfile", "User")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                    success: function (response) {
                        console.log("AJAX success:", response);
                        $("#uploadButton").prop("disabled", false).text("Upload");
                        if (response.success) {
                            showPopup(response.message, "success");
                            setTimeout(function () {
                                window.location.href = '@Url.Action("Dashboard", "User")';
                            }, 2000);
                        } else if (response.confirmRequired) {
                            showConfirmPopup(response.message);
                        } else {
                            showPopup(response.message, "error");
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log("AJAX error:", status, error, xhr.responseText);
                        $("#uploadButton").prop("disabled", false).text("Upload");
                        showPopup("An error occurred: " + (xhr.responseText || error), "error");
                    }
                });
            }

            function showPopup(message, type) {
                $("#popupMessage").text(message);
                $("#popup").removeClass("success error confirm").addClass(type);
                $("#popupConfirm, #popupCancel").hide();
                $("#popupClose").show();
                $("#popup").show();
                $("#popupOverlay").show();
            }

            function showConfirmPopup(message) {
                $("#popupMessage").text(message);
                $("#popup").removeClass("success error confirm").addClass("confirm");
                $("#popupClose").hide();
                $("#popupConfirm, #popupCancel").show();
                $("#popup").show();
                $("#popupOverlay").show();
            }

            function hidePopup() {
                $("#popup").hide();
                $("#popupOverlay").hide();
            }
        });
    </script>
}